name: CI Deploy

on:
  push:
    branches: "main"

  pull_request:
    branches:
      - "main"
  workflow_dispatch:

concurrency:
  group: GitHubPages
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: "22"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build with VitePress
        run: npm run site:build

  test:
    name: Testing
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # - name: SonarCloud Scan
        # uses: SonarSource/sonarcloud-github-action@v3.1.0
        # env:
        #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #   SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - name: Run Tests
      #   run: npm test

      # - name: Run Tests
      #   run: npm test:coverage

      # - name: Run Tests
      #   run: npm test:junit

      # - name: Run tests
      #   run: npx vitest run --coverage

      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Upload results to Codecov
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - name: Test and coverage
      #   run: npm jest --coverage ./tests/coverage/lcov.info

      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   with:
      #     scanMetadataReportFile: target/sonar/report-task.txt
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to GitHub Pages
    env:
      ArtifactPath: site/.vitepress/dist
    environment:
      name: Production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5.0.0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: $ArtifactPath

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
